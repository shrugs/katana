import { createCss } from '@stitches/react';
import { defaultThemeMap } from '@stitches/react';

const space = {
  px: '1px',
  0: '0px',
  0.5: '0.125rem',
  1: '0.25rem',
  1.5: '0.375rem',
  2: '0.5rem',
  2.5: '0.625rem',
  3: '0.75rem',
  3.5: '0.875rem',
  4: '1rem',
  5: '1.25rem',
  6: '1.5rem',
  7: '1.75rem',
  8: '2rem',
  9: '2.25rem',
  10: '2.5rem',
  11: '2.75rem',
  12: '3rem',
  14: '3.5rem',
  16: '4rem',
  20: '5rem',
  24: '6rem',
  28: '7rem',
  32: '8rem',
  36: '9rem',
  40: '10rem',
  44: '11rem',
  48: '12rem',
  52: '13rem',
  56: '14rem',
  60: '15rem',
  64: '16rem',
  66: '16.5rem', // used in FilterPicker to match grid
  72: '18rem',
  80: '20rem',
  96: '24rem',
  128: '32rem',
};

const sizes = {
  auto: 'auto',
  '1/2': '50%',
  '1/3': '33.333333%',
  '2/3': '66.666667%',
  '1/4': '25%',
  '2/4': '50%',
  '3/4': '75%',
  '1/5': '20%',
  '2/5': '40%',
  '3/5': '60%',
  '4/5': '80%',
  '1/6': '16.666667%',
  '2/6': '33.333333%',
  '3/6': '50%',
  '4/6': '66.666667%',
  '5/6': '83.333333%',
  '1/12': '8.333333%',
  '2/12': '16.666667%',
  '3/12': '25%',
  '4/12': '33.333333%',
  '5/12': '41.666667%',
  '6/12': '50%',
  '7/12': '58.333333%',
  '8/12': '66.666667%',
  '9/12': '75%',
  '10/12': '83.333333%',
  '11/12': '91.666667%',
  full: '100%',
  screenw: '100vw',
  screenh: '100vh',
  min: 'min-content',
  max: 'max-content',
};

export const { styled, css, global, keyframes, getCssString, theme } = createCss({
  theme: {
    colors: {
      red: 'red',
      blue: 'blue',
    },
    space,
    sizes: {
      ...space,
      ...sizes,
    },
    zIndices: {
      auto: 'auto',
      0: '0',
      10: '10',
      20: '20',
      30: '30',
      40: '40',
      50: '50',
    },
    borderWidths: {
      px: '1px',
      0: '0px',
      2: '2px',
      4: '4px',
      8: '8px',
    },
    shadows: {
      sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
      default: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
      md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
      lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
      xl: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
      '2xl': '0 25px 50px -12px rgba(0, 0, 0, 0.25)',
      inner: 'inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)',
      none: 'none',
    },
    radii: {
      none: '0px',
      sm: '0.125rem',
      default: '0.25rem',
      md: '0.375rem',
      lg: '0.5rem',
      xl: '0.75rem',
      '2xl': '1rem',
      '3xl': '1.5rem',
      full: '9999px',
    },
    letterSpacings: {
      tighter: '-0.05em',
      tight: '-0.025em',
      normal: '0em',
      wide: '0.025em',
      wider: '0.05em',
      widest: '0.1em',
    },
    fontSizes: {
      xs: '0.75rem',
      sm: '0.875rem',
      base: '1rem',
      lg: '1.125rem',
      xl: '1.25rem',
      '2xl': '1.5rem',
      '3xl': '1.875rem',
      '4xl': '2.25rem',
      '5xl': '3rem',
      '6xl': '3.75rem',
      '7xl': '4.5rem',
      '8xl': '6rem',
      '9xl': '8rem',
    },
    lineHeights: {
      xs: '1rem',
      sm: '1.25rem',
      base: '1.5rem',
      lg: '1.75rem',
      xl: '1.75rem',
      '2xl': '2rem',
      '3xl': '2.25rem',
      '4xl': '2.5rem',
      '5xl': '1',
      '6xl': '1',
      '7xl': '1',
      '8xl': '1',
      '9xl': '1',
    },
    fontWeights: {
      thin: '100',
      extralight: '200',
      light: '300',
      normal: '400',
      medium: '500',
      semibold: '600',
      bold: '700',
      extrabold: '800',
      black: '900',
    },
    fonts: {
      sans: [
        'ui-sans-serif',
        'system-ui',
        '-apple-system',
        'BlinkMacSystemFont',
        '"Segoe UI"',
        'Roboto',
        '"Helvetica Neue"',
        'Arial',
        '"Noto Sans"',
        'sans-serif',
        '"Apple Color Emoji"',
        '"Segoe UI Emoji"',
        '"Segoe UI Symbol"',
        '"Noto Color Emoji"',
      ].join(', '),
      serif: ['ui-serif', 'Georgia', 'Cambria', '"Times New Roman"', 'Times', 'serif'].join(', '),
      mono: [
        'ui-monospace',
        'SFMono-Regular',
        'Menlo',
        'Monaco',
        'Consolas',
        '"Liberation Mono"',
        '"Courier New"',
        'monospace',
      ].join(', '),
    },
  },
  media: {
    sm: '(min-width: 640px)',
    md: '(min-width: 768px)',
    lg: '(min-width: 1024px)',
    xl: '(min-width: 1280px)',
    '2xl': '(min-width: 1536px)',
  },
  utils: {
    // SIZE
    h: (config) => (value) => ({ height: value }),
    w: (config) => (value) => ({ width: value }),
    extent: (config) => (value) => ({ height: value, width: value }),

    // MARGIN
    m: (config) => (value) => ({
      marginTop: value,
      marginBottom: value,
      marginLeft: value,
      marginRight: value,
    }),
    mt: (config) => (value) => ({ marginTop: value }),
    mr: (config) => (value) => ({ marginRight: value }),
    mb: (config) => (value) => ({ marginBottom: value }),
    ml: (config) => (value) => ({ marginLeft: value }),
    mx: (config) => (value) => ({ marginLeft: value, marginRight: value }),
    my: (config) => (value) => ({ marginTop: value, marginBottom: value }),

    // PADDING
    p: (config) => (value) => ({
      paddingTop: value,
      paddingBottom: value,
      paddingLeft: value,
      paddingRight: value,
    }),
    pt: (config) => (value) => ({ paddingTop: value }),
    pr: (config) => (value) => ({ paddingRight: value }),
    pb: (config) => (value) => ({ paddingBottom: value }),
    pl: (config) => (value) => ({ paddingLeft: value }),
    px: (config) => (value) => ({ paddingLeft: value, paddingRight: value }),
    py: (config) => (value) => ({ paddingTop: value, paddingBottom: value }),

    // SPACING
    sx: (config) => (value) => ({
      '& > * + *': { marginLeft: value },
    }),
    sy: (config) => (value) => ({
      '& > * + *': { marginTop: value },
    }),

    // LAYOUT
    row: (config) => () => ({ display: 'flex', flexDirection: 'row' }),
    col: (config) => () => ({ display: 'flex', flexDirection: 'column' }),

    // BACKGROUND
    bg: (config) => (value) => ({ background: value }),

    // CORNERS
    rounded: (config) => (value) => ({ borderRadius: value }),
  },
  themeMap: {
    ...defaultThemeMap,
    extent: 'size',
    spaceX: 'space',
    spaceY: 'space',
    bg: 'color',
    rounded: 'radii',
  },
});
